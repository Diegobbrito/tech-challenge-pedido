name: SonarCloud
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - run: mvn test -Pcoverage

  code-analisys:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Pcoverage -Dsonar.projectKey=Diegobbrito_tech-challenge-pedido -Dsonar.exclusions=**/bdd/**,**/config/**,**/*Entity.java,**/*Application.java -Dsonar.coverage.jacoco.xmlReportPaths=target/jacoco-reports/jacoco.xml
  build-and-push-docker-image:
    runs-on: ubuntu-latest
    needs: code-analisys
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Get version from pom.xml
        id: get_version
        run: echo ::set-output name=version::$(mvn -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/pedidos:${{ steps.get_version.outputs.version }}
            ${{ secrets.DOCKER_USERNAME }}/pedidos:latest
  deploy-ocp:
    runs-on: ubuntu-latest
#    needs: build-and-push-docker-image
    steps:
      - uses: actions/checkout@v3

      - name: Login to OpenShift
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          oc login --token=${{ secrets.OCP_TOKEN }} --server=${{ secrets.OCP_SERVER }}

      - name: Deploy to OpenShift
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          oc apply -f deployment.yaml